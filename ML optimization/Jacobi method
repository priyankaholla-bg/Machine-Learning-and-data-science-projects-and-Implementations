import numpy as np
def solve_jacobi(A: np.ndarray, b: np.ndarray, n: int) -> list:
    x=[0 for _ in range(len(b))]
    for k in range(n):
        x_new=[0 for _ in range(len(b))]
        for i in range(len(b)):
            ssum = sum(A[i][j]*x[j] for j in range(len(b)) if i!=j)
            x_new[i] = ((b[i] - ssum)/A[i][i]).round(4)
        x=x_new    
    return x_new
